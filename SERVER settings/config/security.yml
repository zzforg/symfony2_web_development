security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        #Role privilege
#        ROLE_SONATA_ADMIN_READER:
#            - ROLE_SONATA_ADMIN_LIST
#            - ROLE_SONATA_ADMIN_VIEW
#        ROLE_SONATA_ADMIN_EDITOR:
#            - ROLE_SONATA_ADMIN_CREATE
#            - ROLE_SONATA_ADMIN_EDIT
#        ROLE_SONATA_ADMIN_EXPORT:   
#            - ROLE_SONATA_ADMIN_EXPORT
#        ROLE_SONATA_ADMIN_ADMIN:
#            - ROLE_SONATA_ADMIN_DELETE
        #Roles    
#        ROLE_STAFF:       [ROLE_USER, ROLE_SONATA_ADMIN_READER, ROLE_SONATA_ADMIN_EXPORT]
#        ROLE_ADMIN:       [ROLE_STAFF, ROLE_SONATA_ADMIN_EXPORT, ROLE_SONATA_ADMIN_EDITOR, ROLE_SONATA_ADMIN_ADMIN]
#        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

        ROLE_STAFF:       [ROLE_USER]
        ROLE_ADMIN:       [ROLE_STAFF]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH, LIST, VIEW]
        
        access_decision_manager:
        strategy: unanimous

    providers:
        in_memory:
            memory:
                users:
                    ibasestaff:  { password: zxcv1234, roles: [ 'ROLE_STAFF' ] }
                    ibaseadmin: { password: zxcv1234, roles: [ 'ROLE_ADMIN' ] }
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
#        login:
#            pattern:  ^/login$
#            security: false
          
        secured_area:
            anonymous: ~
            pattern: ^/
            provider: in_memory
            form_login:
                check_path: login_check
                login_path: login
                remember_me: true
                csrf_provider: form.csrf_provider
            logout:
                path: logout
                target: /
            remember_me:
                key: MiPassphrase
                lifetime: 1800
                path: /.*
                domain: ~
            security: true   

    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, roles: ROLE_USER }
        - { path: ^/admin/, roles: ROLE_ADMIN }
#        - { path: ^admin/$/create, roles: ROLE_ADMIN }
